name: Local Build and Run
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - main
jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Check Docker Permissions
        run: |
          # Make sure current user has Docker permissions
          echo "Current user: $(whoami)"
          
          # Try to add current user to Docker group and reconnect
          sudo usermod -aG docker $USER || true
          
          # Alternative: use sudo for all Docker commands
          # This will be used in the next steps
          docker version || sudo docker version
        shell: bash
          
      - name: Install and Set up Docker Buildx
        run: |
          # Check if Docker CLI plugins directory exists, create if not
          mkdir -p ~/.docker/cli-plugins
          
          # Download the latest buildx binary
          BUILDX_URL=$(curl -s https://api.github.com/repos/docker/buildx/releases/latest | grep "browser_download_url.*linux-amd64" | cut -d '"' -f 4)
          wget -O ~/.docker/cli-plugins/docker-buildx $BUILDX_URL
          
          # Make binary executable
          chmod +x ~/.docker/cli-plugins/docker-buildx
          
          # Verify installation
          sudo docker buildx version
          
          # Set up buildx (with sudo)
          sudo docker buildx create --use
          sudo docker buildx inspect --bootstrap
        shell: bash
      
      - name: Build Docker Image
        run: |
          # Build for the local architecture only
          sudo docker build -t dumbdrop:latest .
        shell: bash
      
      - name: Create Local Directories
        run: |
          sudo mkdir -p /app/data
          sudo mkdir -p /app/uploads
          # Ensure proper permissions
          sudo chmod -R 777 /app/uploads
        shell: bash
      
      - name: Stop and Remove Existing Container
        run: |
          sudo docker stop dumbdrop || true
          sudo docker rm dumbdrop || true
        shell: bash
      
      - name: Deploy Container Locally
        run: |
          sudo docker run -d \
            --name dumbdrop \
            -p 3002:3000 \
            -v /app/uploads:/app/uploads \
            -e DUMBDROP_TITLE=DumbDrop \
            -e MAX_FILE_SIZE=1024 \
            -e DUMBDROP_PIN=123456 \
            -e AUTO_UPLOAD=false \
            --restart unless-stopped \
            dumbdrop:latest
        shell: bash
      
      - name: Verify Container Status
        run: |
          # Check if container is running
          if sudo docker ps --format '{{.Names}}' | grep -q '^dumbdrop; then
            echo 'Container is running successfully'
          else
            echo 'Container failed to start'
            sudo docker logs dumbdrop
            exit 1
          fi
        shell: bash
